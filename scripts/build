#!/bin/bash

BASENAME=clusterware
NAME=packager

alces_modules_version=3.2.10
alces_BASE_REPO_PATH=https://github.com/alces-software/packager-base.git

if ! [ -z "$1" ]; then
  alces_deps=$1
fi

trap "/bin/kill -- -$BASHPID &>/dev/null" EXIT INT TERM

function toggle_spin () {
        if [ -z "$spin_pid" ]; then
            (
                i=1
                sp="/-\|"
                printf " "
                while true;
                do
                    printf "\b[1m${sp:i++%${#sp}:1}[0m"
                    if [[ i -eq ${#sp} ]]; then
                        i=0
                    fi
                    sleep 0.2
                done
            ) &
            sleep 1
            spin_pid=$!
        else
            sleep 1
            kill $spin_pid
            wait $spin_pid 2>/dev/null
            printf "\b"
            unset spin_pid
        fi
}

function title() {
    printf "\n > $1\n"
}

function doing() {
    if [ -z "$2" ]; then
        pad=12
    else
        pad=$2
    fi
    printf "    [36m%${pad}s[0m ... " "$1"
    toggle_spin
}

function say_done () {
    toggle_spin
    if [ $1 -gt 0 ]; then
        echo '[31mFAIL[0m'
        exit 1
    else
        echo '[32mOK[0m '
    fi
}

LOGDIR="var/log/${NAME}"

if [ "${alces_deps}" ]; then
    title "Copying in existing deps tree from ${alces_deps}"
    doing "Copy"
    if [ -d ${alces_deps} ]; then
      mkdir -p "${alces_PATH}/opt/${alces_OS}/"
      cp -a ${alces_deps}/* "${alces_PATH}/opt/${alces_OS}/."
      say_done $?
    else
      say_done 1
    fi
else
  title "Installing environment modules"
  if [ -d "${alces_PATH}/opt/${alces_OS}/Modules" ]; then
    doing 'Skip'
    say_done $?
  else
    cd "${alces_SRC_PATH}"
    doing 'Extract'
    tar xzf "${alces_ARCHIVES_PATH}/modules-${alces_modules_version}.tar.gz"
    say_done $?
    cd modules-${alces_modules_version}
    doing 'Configure'
    if [ -f /usr/lib64/tclConfig.sh ]; then
        TCLLIB=/usr/lib64
    else
        TCLLIB=/usr/lib
    fi
    ./configure --disable-versioning --with-tcl=$TCLLIB --prefix="${alces_PATH}/opt/${alces_OS}" &> "${alces_PATH}/${LOGDIR}/modules-configure-${alces_OS}.log"
    say_done $?
    doing 'Compile'
    make &> "${alces_PATH}/${LOGDIR}/modules-make-${alces_OS}.log"
    say_done $?
    doing 'Install'
    make install &> "${alces_PATH}/${LOGDIR}/modules-install-${alces_OS}.log"
    say_done $?
  fi

  # install ruby lib gems
  title "Configuring ruby components"
  cd "${alces_PATH}/opt/${BASENAME}/lib/${NAME}/lib/ruby"
  doing 'Configure'
  "${alces_RUBYHOME}/bin/bundle" install --local &> "${alces_PATH}/${LOGDIR}/components-install.log"
  say_done $?
fi
